plugins {
    alias(libs.plugins.android.application)
}

import java.util.Properties

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withInputStream { stream ->
        localProperties.load(stream)
    }
}

android {
    namespace 'com.example.kurs'
    compileSdk 35

    buildFeatures {
        buildConfig = true
    }

    defaultConfig {
        applicationId "com.example.kurs"
        minSdk 24
        targetSdk 35
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "API_KEY", "\"${localProperties.getProperty('API_KEY')}\""

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Вот тут добавляем buildConfigField с ключом из local.properties
        buildConfigField "String", "API_KEY", "\"${localProperties.getProperty('API_KEY')}\""
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}


dependencies {

    implementation libs.appcompat
    implementation libs.material
    implementation libs.activity
    implementation libs.constraintlayout
    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    // Retrofit для сетевых запросов
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
// Конвертер JSON (Gson)
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
// Для логирования запросов (по желанию)
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.16.0'
    implementation 'androidx.cardview:cardview:1.0.0'



}